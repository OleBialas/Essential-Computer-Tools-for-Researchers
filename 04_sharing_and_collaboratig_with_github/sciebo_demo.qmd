---
title: "Data storage and exchange with sciebo"
format: ipynb
filters:
  - assign
number-sections: true
number-depth: 2
---

Git is great at tracking changes in small (text) files, large binary files (e.g. data files) can not be tracked efficiently. A simple solution is to host you data in a separate cloud storage, outside of your Git repository. This allows us to store and share large data files while still using Git to track changes in our code.

## Sciebo

If you are a student in North Rhine-Westphalia (NRW), you have access to [Sciebo](https://hochschulcloud.nrw/), a cloud service provided by the University of Muenster. Using Sciebo has several advantages:

- It's free of charge
- Just login with you university mail and an account is automatically generated
- Follows strict data protecion laws
- Feature rich (e.g. builtin text editor)

## Sharing Data via Sciebo

To share a file, simply upload it to sciebo and creat

## Downloading shared data

Then, you can either download it manually or programatically within your notebook

```{python}
import requests

url = "https://uni-bonn.sciebo.de/s/qCHMHRKqfpmL8B4/download"
response = requests.get(url)

with open("steinmetz_lfp.npz", "wb") as file:
    file.write(response.content)
```

## Ignoring large files

Git will detect that a new file was created and wait for you to commit it to the repository

```{python}
!git status
```

To prevent git from accidentally tracking this file, we can add it to `.gitignore`